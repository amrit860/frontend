{"ast":null,"code":"var _jsxFileName = \"/media/amrit/local Disk/frontend/AmritProject/fronted/src/component/auth /login/login.component.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\"; // import axios from \"axios\";\n\nimport notification from \"./../../../utils/notification\";\nimport \"./login.component.css\";\nimport { httpClient } from \"../../../utils/httpclient\";\nexport class LoginComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      let {\n        type,\n        name,\n        value,\n        checked\n      } = e.target;\n\n      if (type === \"checkbox\") {\n        value = checked;\n        this.rememberMe(value);\n      }\n\n      this.setState(preState => ({\n        data: { ...preState.data,\n          [name]: value\n        }\n      }), () => {\n        this.validateForm(name);\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        isSubmitting: true\n      }); // setTimeout(() => {\n      //   this.setState({\n      //     isSubmitting: false\n      //   });\n      //   this.props.history.push(\"/dashboard/amrit\");\n      // }, 2000);\n\n      httpClient.post(\"/auth/login\", this.state.data).then(response => {\n        notification.showSuccess(`welcome ${response.data.user.username}`);\n        console.log(\"success in axios call>>\", response);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n        this.props.history.push(\"/dashboard\");\n      }).catch(err => {\n        console.log(\"error in axios call>>\", err.response);\n        notification.handleError(err);\n      }).finally(() => {\n        this.setState({\n          isSubmitting: false\n        });\n      });\n    };\n\n    this.state = {\n      data: {},\n      error: {},\n      issubmitting: false,\n      isValiditing: false,\n      remember_me: false\n    };\n  }\n\n  rememberMe(val) {\n    console.log(\"value>>\", val);\n    localStorage.setItem(\"remember_me\", val);\n  }\n\n  validateForm(fieldName) {\n    let errmsg;\n\n    switch (fieldName) {\n      case \"username\":\n        errmsg = this.state[fieldName] ? \"\" : \"username is required \";\n        break;\n\n      case \"password\":\n        errmsg = this.state[fieldName] ? \"\" : \"password is required\";\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState(prevState => ({\n      error: { ...prevState.error,\n        [fieldName]: errmsg\n      }\n    }));\n  }\n\n  render() {\n    let btn = this.state.isSubmitting ? React.createElement(\"button\", {\n      disabled: true,\n      type: \"submit\",\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Logging in\") : React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"login\");\n    return React.createElement(\"div\", {\n      className: \"loginbox.a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"form\", {\n      className: \"form-group\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Username:\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"text\",\n      placeholder: \"username\",\n      name: \"username\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.usernameErr), React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Password:\"), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      placeholder: \"password\",\n      name: \"password\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.passwordErr), React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"remember_me\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Remember Me\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), btn), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \" \", \"Don't have an account?\", React.createElement(Link, {\n      to: \"/register\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \" register\")), React.createElement(Link, {\n      to: \"/password.html\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"forgot password?\"));\n  }\n\n}","map":{"version":3,"sources":["/media/amrit/local Disk/frontend/AmritProject/fronted/src/component/auth /login/login.component.js"],"names":["React","Link","notification","httpClient","LoginComponent","Component","constructor","handleChange","e","type","name","value","checked","target","rememberMe","setState","preState","data","validateForm","handleSubmit","preventDefault","isSubmitting","post","state","then","response","showSuccess","user","username","console","log","localStorage","setItem","token","JSON","stringify","props","history","push","catch","err","handleError","finally","error","issubmitting","isValiditing","remember_me","val","fieldName","errmsg","prevState","render","btn","usernameErr","passwordErr"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import axios from \"axios\";\nimport notification from \"./../../../utils/notification\";\nimport \"./login.component.css\";\nimport { httpClient } from \"../../../utils/httpclient\";\n\nexport class LoginComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: {},\n      error: {},\n      issubmitting: false,\n      isValiditing: false,\n      remember_me: false,\n    };\n  }\n\n  handleChange = (e) => {\n    let { type, name, value, checked } = e.target;\n    if (type === \"checkbox\") {\n      value = checked;\n      this.rememberMe(value);\n    }\n    this.setState(\n      (preState) => ({\n        data: {\n          ...preState.data,\n          [name]: value,\n        },\n      }),\n      () => {\n        this.validateForm(name);\n      }\n    );\n  };\n  rememberMe(val) {\n    console.log(\"value>>\", val);\n    localStorage.setItem(\"remember_me\", val);\n  }\n  validateForm(fieldName) {\n    let errmsg;\n    switch (fieldName) {\n      case \"username\":\n        errmsg = this.state[fieldName] ? \"\" : \"username is required \";\n\n        break;\n      case \"password\":\n        errmsg = this.state[fieldName] ? \"\" : \"password is required\";\n        break;\n      default:\n        break;\n    }\n    this.setState((prevState) => ({\n      error: {\n        ...prevState.error,\n        [fieldName]: errmsg,\n      },\n    }));\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.setState({\n      isSubmitting: true,\n    });\n    // setTimeout(() => {\n    //   this.setState({\n    //     isSubmitting: false\n    //   });\n    //   this.props.history.push(\"/dashboard/amrit\");\n    // }, 2000);\n    httpClient\n      .post(\"/auth/login\", this.state.data)\n      .then((response) => {\n        notification.showSuccess(`welcome ${response.data.user.username}`);\n        console.log(\"success in axios call>>\", response);\n        localStorage.setItem(\"token\", response.data.token);\n        localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n        this.props.history.push(\"/dashboard\");\n      })\n      .catch((err) => {\n        console.log(\"error in axios call>>\", err.response);\n        notification.handleError(err);\n      })\n      .finally(() => {\n        this.setState({\n          isSubmitting: false,\n        });\n      });\n  };\n\n  render() {\n    let btn = this.state.isSubmitting ? (\n      <button disabled={true} type=\"submit\" className=\"wrapper\">\n        Logging in\n      </button>\n    ) : (\n      <button type=\"submit\" className=\"wrapper\">\n        login\n      </button>\n    );\n\n    return (\n      <div className=\"loginbox.a\">\n        <h2>Login</h2>\n\n        <form className=\"form-group\" onSubmit={this.handleSubmit}>\n          <label htmlFor=\"username\">Username:</label>\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            placeholder=\"username\"\n            name=\"username\"\n            onChange={this.handleChange}\n          ></input>\n          <p className=\"danger\">{this.state.usernameErr}</p>\n          <label htmlFor=\"password\">Password:</label> <br></br>\n          <input\n            className=\"form-control\"\n            type=\"password\"\n            placeholder=\"password\"\n            name=\"password\"\n            onChange={this.handleChange}\n          ></input>\n          <p className=\"danger\">{this.state.passwordErr}</p>\n          <input\n            type=\"checkbox\"\n            name=\"remember_me\"\n            onChange={this.handleChange}\n          ></input>\n          <label>Remember Me</label>\n          <br></br>\n          {btn}\n        </form>\n\n        <p>\n          {\" \"}\n          Don't have an account?\n          <Link to=\"/register\"> register</Link>\n        </p>\n        <Link to=\"/password.html\">forgot password?</Link>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}